name: Deploy Tic-Tac-Toe to GitHub Pages

on:
  push:
    branches: [ main, prototype ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Test Backend API
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test backend imports and initialization
        run: |
          cd backend
          python -c "
          from main import app
          import json
          
          print('✓ Testing Flask app imports...')
          assert app is not None, 'Flask app failed to initialize'
          
          print('✓ Testing Perfect Minimax agent...')
          from agents.perfect_agent import PerfectMinimaxAgent
          agent = PerfectMinimaxAgent()
          assert agent is not None, 'Agent failed to initialize'
          
          print('✓ Testing Easy agent...')
          from agents.easy_agent import EasyAgent
          easy_agent = EasyAgent()
          assert easy_agent is not None, 'Easy agent failed to initialize'
          
          print('✓ Testing Medium agent...')
          from agents.medium_agent import MediumAgent
          medium_agent = MediumAgent()
          assert medium_agent is not None, 'Medium agent failed to initialize'
          
          print('✓ Testing game engine...')
          from core.tictactoe import TicTacToe
          game = TicTacToe()
          assert game is not None, 'Game engine failed to initialize'
          
          print('✅ All backend tests passed!')
          "
      
      - name: Test Render.com backend API
        continue-on-error: true
        run: |
          echo "Testing Render.com backend API..."
          HEALTH_RESPONSE=$(curl -s -w "\n%{http_code}" https://tictactoe-qlearning.onrender.com/api/health || echo "failed\n000")
          HTTP_CODE=$(echo "$HEALTH_RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$HEALTH_RESPONSE" | head -n1)
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response: $RESPONSE_BODY"
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Backend API is healthy!"
          else
            echo "⚠️ Backend API returned status $HTTP_CODE (may be cold start)"
          fi

  # Build React Frontend
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
        
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Build React app
        working-directory: ./frontend
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Verify build output
        run: |
          echo "Build directory contents:"
          ls -la frontend/dist/
          echo "✅ Frontend build successful!"
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './frontend/dist'

  # Deploy to GitHub Pages
  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Deployment Summary
        run: |
          echo "🎉 Deployment Complete!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Frontend URL: https://xircons.github.io/tictactoe-qlearning/"
          echo "Backend URL: https://tictactoe-qlearning.onrender.com"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ Game is ready to play!"
